<?php
// auto-generated by sfPropelAdmin
// date: 2018/01/22 10:25:36
?>
<?php

/**
 * autoIpalKomunal actions.
 *
 * @package    ##PROJECT_NAME##
 * @subpackage autoIpalKomunal
 * @author     Fabien Potencier <fabien.potencier@symfony-project.com>
 * @version    SVN: $Id: actions.class.php 9855 2008-06-25 11:26:01Z FabianLange $
 */
class autoIpalKomunalActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('ipalKomunal', 'list');
  }

  public function executeList()
  {
    $this->processSort();

    $this->processFilters();

    $this->filters = $this->getUser()->getAttributeHolder()->getAll('sf_admin/ipal_komunal/filters');

    // pager
    $this->pager = new sfPropelPager('IpalKomunal', 20);
    $c = new Criteria();
    $this->addSortCriteria($c);
    $this->addFiltersCriteria($c);
    $this->pager->setCriteria($c);
    $this->pager->setPage($this->getRequestParameter('page', $this->getUser()->getAttribute('page', 1, 'sf_admin/ipal_komunal')));
    $this->pager->init();
    // save page
    if ($this->getRequestParameter('page')) {
        $this->getUser()->setAttribute('page', $this->getRequestParameter('page'), 'sf_admin/ipal_komunal');
    }
  }

  public function executeCreate()
  {
    return $this->forward('ipalKomunal', 'edit');
  }

  public function executeSave()
  {
    return $this->forward('ipalKomunal', 'edit');
  }

  public function executeEdit()
  {
    $this->ipal_komunal = $this->getIpalKomunalOrCreate();

    if ($this->getRequest()->getMethod() == sfRequest::POST)
    {
      $this->updateIpalKomunalFromRequest();

      $this->saveIpalKomunal($this->ipal_komunal);

      $this->setFlash('notice', 'Your modifications have been saved');

      if ($this->getRequestParameter('save_and_add'))
      {
        return $this->redirect('ipalKomunal/create');
      }
      else if ($this->getRequestParameter('save_and_list'))
      {
        return $this->redirect('ipalKomunal/list');
      }
      else
      {
        return $this->redirect('ipalKomunal/edit?id='.$this->ipal_komunal->getId());
      }
    }
    else
    {
      $this->labels = $this->getLabels();
    }
  }

  public function executeDelete()
  {
    $this->ipal_komunal = IpalKomunalPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->ipal_komunal);

    try
    {
      $this->deleteIpalKomunal($this->ipal_komunal);
    }
    catch (PropelException $e)
    {
      $this->getRequest()->setError('delete', 'Could not delete the selected Ipal komunal. Make sure it does not have any associated items.');
      return $this->forward('ipalKomunal', 'list');
    }

    return $this->redirect('ipalKomunal/list');
  }

  public function handleErrorEdit()
  {
    $this->preExecute();
    $this->ipal_komunal = $this->getIpalKomunalOrCreate();
    $this->updateIpalKomunalFromRequest();

    $this->labels = $this->getLabels();

    return sfView::SUCCESS;
  }

  protected function saveIpalKomunal($ipal_komunal)
  {
    $ipal_komunal->save();

  }

  protected function deleteIpalKomunal($ipal_komunal)
  {
    $ipal_komunal->delete();
  }

  protected function updateIpalKomunalFromRequest()
  {
    $ipal_komunal = $this->getRequestParameter('ipal_komunal');

    if (isset($ipal_komunal['id_wilayah']))
    {
    $this->ipal_komunal->setIdWilayah($ipal_komunal['id_wilayah'] ? $ipal_komunal['id_wilayah'] : null);
    }
    if (isset($ipal_komunal['nama']))
    {
      $this->ipal_komunal->setNama($ipal_komunal['nama']);
    }
    if (isset($ipal_komunal['alamat']))
    {
      $this->ipal_komunal->setAlamat($ipal_komunal['alamat']);
    }
    if (isset($ipal_komunal['dasar_pembangunan']))
    {
      $this->ipal_komunal->setDasarPembangunan($ipal_komunal['dasar_pembangunan']);
    }
    if (isset($ipal_komunal['tanggal_pembangunan']))
    {
      $this->ipal_komunal->setTanggalPembangunan($ipal_komunal['tanggal_pembangunan']);
    }
    if (isset($ipal_komunal['bulan_pembangunan']))
    {
      $this->ipal_komunal->setBulanPembangunan($ipal_komunal['bulan_pembangunan']);
    }
    if (isset($ipal_komunal['tahun_pembangunan']))
    {
      $this->ipal_komunal->setTahunPembangunan($ipal_komunal['tahun_pembangunan']);
    }
    if (isset($ipal_komunal['pengelola']))
    {
      $this->ipal_komunal->setPengelola($ipal_komunal['pengelola']);
    }
    if (isset($ipal_komunal['kondisi']))
    {
      $this->ipal_komunal->setKondisi($ipal_komunal['kondisi']);
    }
  }

  protected function getIpalKomunalOrCreate($id = 'id')
  {
    if (!$this->getRequestParameter($id))
    {
      $ipal_komunal = new IpalKomunal();
    }
    else
    {
      $ipal_komunal = IpalKomunalPeer::retrieveByPk($this->getRequestParameter($id));

      $this->forward404Unless($ipal_komunal);
    }

    return $ipal_komunal;
  }

  protected function processFilters()
  {
    if ($this->getRequest()->hasParameter('filter'))
    {
      $filters = $this->getRequestParameter('filters');

      $this->getUser()->getAttributeHolder()->removeNamespace('sf_admin/ipal_komunal');
      $this->getUser()->getAttributeHolder()->removeNamespace('sf_admin/ipal_komunal/filters');
      $this->getUser()->getAttributeHolder()->add($filters, 'sf_admin/ipal_komunal/filters');
    }
  }

  protected function processSort()
  {
    if ($this->getRequestParameter('sort'))
    {
      $this->getUser()->setAttribute('sort', $this->getRequestParameter('sort'), 'sf_admin/ipal_komunal/sort');
      $this->getUser()->setAttribute('type', $this->getRequestParameter('type', 'asc'), 'sf_admin/ipal_komunal/sort');
    }

    if (!$this->getUser()->getAttribute('sort', null, 'sf_admin/ipal_komunal/sort'))
    {
    }
  }

  protected function addFiltersCriteria($c)
  {
    if (isset($this->filters['id_wilayah_is_empty']))
    {
      $criterion = $c->getNewCriterion(IpalKomunalPeer::ID_WILAYAH, '');
      $criterion->addOr($c->getNewCriterion(IpalKomunalPeer::ID_WILAYAH, null, Criteria::ISNULL));
      $c->add($criterion);
    }
    else if (isset($this->filters['id_wilayah']) && $this->filters['id_wilayah'] !== '')
    {
      $c->add(IpalKomunalPeer::ID_WILAYAH, $this->filters['id_wilayah']);
    }
    if (isset($this->filters['tahun_pembangunan_is_empty']))
    {
      $criterion = $c->getNewCriterion(IpalKomunalPeer::TAHUN_PEMBANGUNAN, '');
      $criterion->addOr($c->getNewCriterion(IpalKomunalPeer::TAHUN_PEMBANGUNAN, null, Criteria::ISNULL));
      $c->add($criterion);
    }
    else if (isset($this->filters['tahun_pembangunan']) && $this->filters['tahun_pembangunan'] !== '')
    {
      $c->add(IpalKomunalPeer::TAHUN_PEMBANGUNAN, $this->filters['tahun_pembangunan']);
    }
  }

  protected function addSortCriteria($c)
  {
    if ($sort_column = $this->getUser()->getAttribute('sort', null, 'sf_admin/ipal_komunal/sort'))
    {
      $sort_column = IpalKomunalPeer::translateFieldName($sort_column, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_COLNAME);
      if ($this->getUser()->getAttribute('type', null, 'sf_admin/ipal_komunal/sort') == 'asc')
      {
        $c->addAscendingOrderByColumn($sort_column);
      }
      else
      {
        $c->addDescendingOrderByColumn($sort_column);
      }
    }
  }

  protected function getLabels()
  {
    return array(
      'ipal_komunal{id_wilayah}' => 'Wilayah:',
      'ipal_komunal{nama}' => 'Nama:',
      'ipal_komunal{alamat}' => 'Alamat:',
      'ipal_komunal{dasar_pembangunan}' => 'Dasar pembangunan:',
      'ipal_komunal{tanggal_pembangunan}' => 'Tanggal pembangunan:',
      'ipal_komunal{bulan_pembangunan}' => 'Bulan pembangunan:',
      'ipal_komunal{tahun_pembangunan}' => 'Tahun pembangunan:',
      'ipal_komunal{pengelola}' => 'Pengelola:',
      'ipal_komunal{kondisi}' => 'Kondisi:',
    );
  }
}
