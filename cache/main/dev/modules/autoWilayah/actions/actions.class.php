<?php
// auto-generated by sfPropelAdmin
// date: 2018/02/01 02:14:24
?>
<?php

/**
 * autoWilayah actions.
 *
 * @package    ##PROJECT_NAME##
 * @subpackage autoWilayah
 * @author     Fabien Potencier <fabien.potencier@symfony-project.com>
 * @version    SVN: $Id: actions.class.php 9855 2008-06-25 11:26:01Z FabianLange $
 */
class autoWilayahActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('wilayah', 'list');
  }

  public function executeList()
  {
    $this->processSort();

    $this->processFilters();


    // pager
    $this->pager = new sfPropelPager('Wilayah', 20);
    $c = new Criteria();
    $this->addSortCriteria($c);
    $this->addFiltersCriteria($c);
    $this->pager->setCriteria($c);
    $this->pager->setPage($this->getRequestParameter('page', $this->getUser()->getAttribute('page', 1, 'sf_admin/wilayah')));
    $this->pager->init();
    // save page
    if ($this->getRequestParameter('page')) {
        $this->getUser()->setAttribute('page', $this->getRequestParameter('page'), 'sf_admin/wilayah');
    }
  }

  public function executeCreate()
  {
    return $this->forward('wilayah', 'edit');
  }

  public function executeSave()
  {
    return $this->forward('wilayah', 'edit');
  }

  public function executeEdit()
  {
    $this->wilayah = $this->getWilayahOrCreate();

    if ($this->getRequest()->getMethod() == sfRequest::POST)
    {
      $this->updateWilayahFromRequest();

      $this->saveWilayah($this->wilayah);

      $this->setFlash('notice', 'Your modifications have been saved');

      if ($this->getRequestParameter('save_and_add'))
      {
        return $this->redirect('wilayah/create');
      }
      else if ($this->getRequestParameter('save_and_list'))
      {
        return $this->redirect('wilayah/list');
      }
      else
      {
        return $this->redirect('wilayah/edit?id='.$this->wilayah->getId());
      }
    }
    else
    {
      $this->labels = $this->getLabels();
    }
  }

  public function executeDelete()
  {
    $this->wilayah = WilayahPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->wilayah);

    try
    {
      $this->deleteWilayah($this->wilayah);
    }
    catch (PropelException $e)
    {
      $this->getRequest()->setError('delete', 'Could not delete the selected Wilayah. Make sure it does not have any associated items.');
      return $this->forward('wilayah', 'list');
    }

    return $this->redirect('wilayah/list');
  }

  public function handleErrorEdit()
  {
    $this->preExecute();
    $this->wilayah = $this->getWilayahOrCreate();
    $this->updateWilayahFromRequest();

    $this->labels = $this->getLabels();

    return sfView::SUCCESS;
  }

  protected function saveWilayah($wilayah)
  {
    $wilayah->save();

  }

  protected function deleteWilayah($wilayah)
  {
    $wilayah->delete();
  }

  protected function updateWilayahFromRequest()
  {
    $wilayah = $this->getRequestParameter('wilayah');

    if (isset($wilayah['wilayah']))
    {
      $this->wilayah->setWilayah($wilayah['wilayah']);
    }
    if (isset($wilayah['kecamatan']))
    {
      $this->wilayah->setKecamatan($wilayah['kecamatan']);
    }
    if (isset($wilayah['kelurahan']))
    {
      $this->wilayah->setKelurahan($wilayah['kelurahan']);
    }
  }

  protected function getWilayahOrCreate($id = 'id')
  {
    if (!$this->getRequestParameter($id))
    {
      $wilayah = new Wilayah();
    }
    else
    {
      $wilayah = WilayahPeer::retrieveByPk($this->getRequestParameter($id));

      $this->forward404Unless($wilayah);
    }

    return $wilayah;
  }

  protected function processFilters()
  {
  }

  protected function processSort()
  {
    if ($this->getRequestParameter('sort'))
    {
      $this->getUser()->setAttribute('sort', $this->getRequestParameter('sort'), 'sf_admin/wilayah/sort');
      $this->getUser()->setAttribute('type', $this->getRequestParameter('type', 'asc'), 'sf_admin/wilayah/sort');
    }

    if (!$this->getUser()->getAttribute('sort', null, 'sf_admin/wilayah/sort'))
    {
    }
  }

  protected function addFiltersCriteria($c)
  {
  }

  protected function addSortCriteria($c)
  {
    if ($sort_column = $this->getUser()->getAttribute('sort', null, 'sf_admin/wilayah/sort'))
    {
      $sort_column = WilayahPeer::translateFieldName($sort_column, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_COLNAME);
      if ($this->getUser()->getAttribute('type', null, 'sf_admin/wilayah/sort') == 'asc')
      {
        $c->addAscendingOrderByColumn($sort_column);
      }
      else
      {
        $c->addDescendingOrderByColumn($sort_column);
      }
    }
  }

  protected function getLabels()
  {
    return array(
      'wilayah{wilayah}' => 'Wilayah:',
      'wilayah{kecamatan}' => 'Kecamatan:',
      'wilayah{kelurahan}' => 'Kelurahan:',
    );
  }
}
